diff --git a/src/agent/QmixAgent.py b/src/agent/QmixAgent.py
index 6dce25c..f4531b0 100644
--- a/src/agent/QmixAgent.py
+++ b/src/agent/QmixAgent.py
@@ -25,7 +25,7 @@ class QmixAgentConfig(ConfigBase):
         if self.brain.brain['use_noisy_q']:
             self.qnet.qnet.move_module['use_noisy'] = True
             self.qnet.qnet.attack_module['use_noisy'] = True
-            self.qnet.qnet.qnet['exploration_method'] = 'noisy_net'
+            self.qnet.qnet.qnet['exploration_method'] = 'clustered_random'
         else:
             self.qnet.qnet.move_module['use_noisy'] = False
             self.qnet.qnet.attack_module['use_noisy'] = False
diff --git a/src/nn/MLP.py b/src/nn/MLP.py
index ef4a5ab..f3a5058 100644
--- a/src/nn/MLP.py
+++ b/src/nn/MLP.py
@@ -12,7 +12,7 @@ class MLPConfig(ConfigBase):
             'input_dimension': 32,
             'output_dimension': 32,
             'activation': 'mish',
-            'out_activation': None,
+            'out_activation': 'mish',
             'num_neurons': [64, 64],
             'normalization': None,
             'weight_init': 'xavier',
diff --git a/src/nn/RelationalGraphNetwork.py b/src/nn/RelationalGraphNetwork.py
index 434e332..0117ffb 100644
--- a/src/nn/RelationalGraphNetwork.py
+++ b/src/nn/RelationalGraphNetwork.py
@@ -14,14 +14,14 @@ class RelationalGraphNetworkConfig(ConfigBase):
 
         self.gnn = {
             'input_node_dim': 19,
-            'hidden_node_dim': 8,
+            'hidden_node_dim': 16,
             'output_node_dim': 16,
             'init_node_dim': 19,
-            'num_hidden_layers': 2,
+            'num_hidden_layers': 1,
             'node_types': [NODE_ALLY, NODE_ENEMY],
             'edge_types': [EDGE_ALLY, EDGE_ENEMY, EDGE_ALLY_TO_ENEMY],
             'updater_conf': MLPConfig().mlp,
-            'use_residual': True,
+            'use_residual': False,
             'use_concat': True,
         }
 
diff --git a/src/test/test.py b/src/test/test.py
index e2bbd7e..4069bdc 100644
--- a/src/test/test.py
+++ b/src/test/test.py
@@ -6,7 +6,7 @@ from src.agent.QmixAgent import QmixAgent, QmixAgentConfig
 
 if __name__ == '__main__':
 
-    exp_name = "Qmix_MLPSUP"
+    exp_name = "qmix_refac"
 
     conf = QmixAgentConfig()
     use_noisy_q = conf.brain.brain['use_noisy_q']
@@ -38,7 +38,7 @@ if __name__ == '__main__':
         running_wr = np.mean(running_wrs)
 
         fit_return_dict.update({'train_winning_ratio': running_wr, 'epsilon': agent.brain.eps})
-
+        print(fit_return_dict)
         wandb.log(fit_return_dict, step=iters)
 
         if use_noisy_q:
