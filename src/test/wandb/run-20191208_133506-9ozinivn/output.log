Python 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]
Type 'copyright', 'credits' or 'license' for more information
IPython 7.9.0 -- An enhanced Interactive Python. Type '?' for help.
PyDev console: using IPython 7.9.0

Python 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)] on win32
Out[2]: tensor([0.5000])
{'loss': array(563.6213, dtype=float32), 'loss2': array(2.930084, dtype=float32), 'train_winning_ratio': 0.0, 'epsilon': tensor([0.4975])}
Out[3]: tensor([0.4975])
{'loss': array(1181.3955, dtype=float32), 'loss2': array(4.1402173, dtype=float32), 'train_winning_ratio': 0.0, 'epsilon': tensor([0.4950])}
{'loss': array(1196.3391, dtype=float32), 'loss2': array(5.2098913, dtype=float32), 'train_winning_ratio': 0.0, 'epsilon': tensor([0.4925])}
{'loss': array(986.22253, dtype=float32), 'loss2': array(4.365162, dtype=float32), 'train_winning_ratio': 0.06561000000000002, 'epsilon': tensor([0.4901])}
{'loss': array(1079.3489, dtype=float32), 'loss2': array(3.998967, dtype=float32), 'train_winning_ratio': 0.03486784401000002, 'epsilon': tensor([0.4876])}
{'loss': array(1059.9261, dtype=float32), 'loss2': array(4.11401, dtype=float32), 'train_winning_ratio': 0.01853020188851842, 'epsilon': tensor([0.4852])}
{'loss': array(1462.8944, dtype=float32), 'loss2': array(5.2510476, dtype=float32), 'train_winning_ratio': 0.009847709021836121, 'epsilon': tensor([0.4828])}
{'loss': array(1142.7012, dtype=float32), 'loss2': array(2.7902515, dtype=float32), 'train_winning_ratio': 0.07813347633027362, 'epsilon': tensor([0.4803])}
{'loss': array(1240.3701, dtype=float32), 'loss2': array(4.8736877, dtype=float32), 'train_winning_ratio': 0.04152333279443694, 'epsilon': tensor([0.4779])}
{'loss': array(1159.4917, dtype=float32), 'loss2': array(4.269068, dtype=float32), 'train_winning_ratio': 0.02206720150360837, 'epsilon': tensor([0.4756])}
{'loss': array(1257.9386, dtype=float32), 'loss2': array(3.7090867, dtype=float32), 'train_winning_ratio': 0.011727415634279138, 'epsilon': tensor([0.4732])}
{'loss': array(987.3606, dtype=float32), 'loss2': array(4.3542447, dtype=float32), 'train_winning_ratio': 0.00623242949209694, 'epsilon': tensor([0.4708])}
{'loss': array(1162.932, dtype=float32), 'loss2': array(4.265028, dtype=float32), 'train_winning_ratio': 0.00331216856170949, 'epsilon': tensor([0.4685])}
{'loss': array(1094.919, dtype=float32), 'loss2': array(3.7928586, dtype=float32), 'train_winning_ratio': 0.0017602221726034535, 'epsilon': tensor([0.4661])}
{'loss': array(1057.5664, dtype=float32), 'loss2': array(3.8469386, dtype=float32), 'train_winning_ratio': 0.0009354542316305521, 'epsilon': tensor([0.4638])}
{'loss': array(1039.7892, dtype=float32), 'loss2': array(4.00044, dtype=float32), 'train_winning_ratio': 0.0004971387323119723, 'epsilon': tensor([0.4615])}
{'loss': array(1339.0015, dtype=float32), 'loss2': array(3.1220112, dtype=float32), 'train_winning_ratio': 0.0002641999050386069, 'epsilon': tensor([0.4592])}
{'loss': array(1261.7817, dtype=float32), 'loss2': array(4.4211316, dtype=float32), 'train_winning_ratio': 0.00014040666173362228, 'epsilon': tensor([0.4569])}
Out[4]: 
tensor([38.9659, 41.9052, 10.3745, 13.9063, 25.3032, 20.7732, 15.7167, 29.7406,
         5.7246, 25.9753, 44.4649, 19.9298,  8.4195, 42.8173, 61.6202, 10.9417,
        23.0597, 63.7078, 18.5929, 18.5929, 18.5929, 15.8903, 13.1477,  3.8861,
        13.1477, 25.9548, 20.5093, 13.5612, 23.5418, 24.5690, 13.4941, 12.3767,
        40.2983, 57.7632,  8.8254,  6.9303, 28.7426, 36.2964, 81.7720, 31.2566,
         3.6665,  7.9460, 16.5795, 22.2432,  7.5104, 36.3388, 26.8584, 51.9310,
        54.6130, 21.6526,  2.5269, 26.7403,  7.1297, 43.1015, 14.5534, 12.1145,
        11.9642, 11.9642, 39.7695, 54.1150, 11.2792, 11.2792, 18.3305, 12.2329,
        15.2848, 13.6186, 29.2341, 11.1536, 38.8373, 17.3336, 21.8561, 30.7683,
        30.7683, 37.3451, 13.9627,  7.0434, 16.2771, 16.8009, 26.0324, 17.0709,
         1.8294, 19.4111, 31.8542, 31.8542,  7.3164, 25.9909, 36.5624,  1.8151,
        48.2428,  2.1799,  2.1799, 45.0732, 16.0411, 15.7499, 13.9837, 17.1722,
        20.2513,  7.8461, 15.8652, 27.3906, 15.1582, 24.3996, 36.2234, 15.1582,
        23.1901, 33.1307, 30.7942, 30.2710, 27.1088,  3.7273, 10.0055, 26.0726,
        18.1650, 42.4507, 87.4043, 28.7492, 17.7682, 15.7787, 18.0978, 23.0764,
        14.2675,  2.2368, 29.5152,  2.2368, 14.3915,  6.9516,  8.3272, 45.2216],
       device='cuda:0', grad_fn=<ViewBackward>)
Out[5]: 
tensor([ -0.4197,  -0.0272,  -1.0000,  -0.3892,  -4.5262,  -3.4651,  -7.0062,
        -10.3627,  -1.5808,  -6.1588,  -7.7630,  -4.9861,  -2.7578, -10.8506,
        -11.9982,   0.0641,  -1.0000,  -9.9044,  -1.6237,  -1.6237,  -1.6237,
         -0.8818,   0.1918,   0.5273,   0.1918,  -7.8457,  -3.5481,  -1.6135,
         -6.3540,  -9.9483,  -1.0000,  -1.7694,  -8.5308,  -8.0093,  -1.0000,
          0.2755,  -4.6162,  -1.7484,  -1.6907,  -7.1950,  -1.0000,  -1.0000,
         -2.3974,  -3.3787,  -1.0000,  -3.7118,  -6.3392,  -4.5134,  -9.5143,
          1.5188,   0.8475,   1.9221,   0.6595,   9.8511,  -1.0000,  -2.9771,
         -1.0000,  -1.0000, -10.9612,  -4.8373,  -0.8933,  -0.8933,  -3.2566,
         -2.9406,  -3.7429,  -1.6969,  -5.5520,  -1.0000,  -9.6075,  -2.0160,
         -6.2696,  -4.5359,  -4.5359,  -7.4655,  -0.9618,  -1.0000,  -1.4321,
         -2.7862,  -4.5744,  -4.1419,  -0.0497,  -5.3550,  -3.5255,  -3.5255,
         -0.2714,  -7.5484,  -7.3580,  -1.0000,  -9.4728,   0.2550,   0.2550,
         -8.2031,  -2.7486,  -2.5633,  -6.6324,  -5.0942,  -5.8529,  -1.0000,
         -6.0379,  -5.3554,  -1.8444,  -5.3935,  -6.2072,  -1.8444,  -5.8806,
         -6.0546,  -6.1115,  -4.6646,  -5.2699,  -1.0000,  -1.0848,  -8.4737,
         -2.5031,  -4.9795, -14.0040,  -3.7748,  -1.0000,  -2.2489,  -5.9163,
         -5.5225,  -1.0000,  -0.1782,  -6.8843,  -0.1782,  -2.5411,  -3.7095,
         -0.9767,   4.3118], device='cuda:0')
Out[6]: 
tensor([ -0.4197,  -0.0272,  -1.0000,  -0.3892,  -4.5262,  -3.4651,  -7.0062,
        -10.3627,  -1.5808,  -6.1588,  -7.7630,  -4.9861,  -2.7578, -10.8506,
        -11.9982,   0.0641,  -1.0000,  -9.9044,  -1.6237,  -1.6237,  -1.6237,
         -0.8818,   0.1918,   0.5273,   0.1918,  -7.8457,  -3.5481,  -1.6135,
         -6.3540,  -9.9483,  -1.0000,  -1.7694,  -8.5308,  -8.0093,  -1.0000,
          0.2755,  -4.6162,  -1.7484,  -1.6907,  -7.1950,  -1.0000,  -1.0000,
         -2.3974,  -3.3787,  -1.0000,  -3.7118,  -6.3392,  -4.5134,  -9.5143,
          1.5188,   0.8475,   1.9221,   0.6595,   9.8511,  -1.0000,  -2.9771,
         -1.0000,  -1.0000, -10.9612,  -4.8373,  -0.8933,  -0.8933,  -3.2566,
         -2.9406,  -3.7429,  -1.6969,  -5.5520,  -1.0000,  -9.6075,  -2.0160,
         -6.2696,  -4.5359,  -4.5359,  -7.4655,  -0.9618,  -1.0000,  -1.4321,
         -2.7862,  -4.5744,  -4.1419,  -0.0497,  -5.3550,  -3.5255,  -3.5255,
         -0.2714,  -7.5484,  -7.3580,  -1.0000,  -9.4728,   0.2550,   0.2550,
         -8.2031,  -2.7486,  -2.5633,  -6.6324,  -5.0942,  -5.8529,  -1.0000,
         -6.0379,  -5.3554,  -1.8444,  -5.3935,  -6.2072,  -1.8444,  -5.8806,
         -6.0546,  -6.1115,  -4.6646,  -5.2699,  -1.0000,  -1.0848,  -8.4737,
         -2.5031,  -4.9795, -14.0040,  -3.7748,  -1.0000,  -2.2489,  -5.9163,
         -5.5225,  -1.0000,  -0.1782,  -6.8843,  -0.1782,  -2.5411,  -3.7095,
         -0.9767,   4.3118], device='cuda:0')
Out[7]: 