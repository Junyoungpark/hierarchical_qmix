Python 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]
Type 'copyright', 'credits' or 'license' for more information
IPython 7.9.0 -- An enhanced Interactive Python. Type '?' for help.
PyDev console: using IPython 7.9.0

Out[5]: 
tensor([[-7.7964,  3.2653, 16.3944,  6.1382],
        [-7.8039,  3.2975, 16.4085,  6.1733],
        [-7.8108,  3.3300, 16.4226,  6.2081],
        [-7.7601,  3.3855, 16.5015,  6.3804],
        [-7.7672,  3.4180, 16.5154,  6.4074],
        [-7.7883,  3.4470, 16.5320,  6.4239],
        [-7.8973,  3.5767, 16.5478,  6.4610],
        [-7.9209,  3.6046, 16.5591,  6.4806],
        [-7.9424,  3.6181, 16.5603,  6.4739],
        [-9.1130,  4.0010, -5.7349,  9.9210],
        [-9.1846,  3.9190, -5.6341, 10.2259],
        [-9.2507,  4.0111, -5.6192, 10.1876],
        [-9.2054,  3.8998, -5.6144, 10.3330],
        [-9.3388,  4.1234, -5.6323, 10.1441],
        [-9.5299,  4.2536, -5.5937, 10.2745],
        [-9.2615,  4.1147, -5.7047, 10.0259],
        [-9.3682,  4.1181, -5.6004, 10.2048]], grad_fn=<AddmmBackward>)
Traceback (most recent call last):
  File "C:\Users\joon0\Anaconda3\envs\gpu_torch130\lib\site-packages\IPython\core\interactiveshell.py", line 3326, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-6-2dcfd51c5ce8>", line 1, in <module>
    move_arg
NameError: name 'move_arg' is not defined
Traceback (most recent call last):
  File "C:\Users\joon0\Anaconda3\envs\gpu_torch130\lib\site-packages\IPython\core\interactiveshell.py", line 3326, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-7-2dcfd51c5ce8>", line 1, in <module>
    move_arg
NameError: name 'move_arg' is not defined
Out[8]: 
tensor([[ -6.5986,   6.7583,  25.6081,   9.5527],
        [ -8.4695,   3.7885,  17.1714,   7.2088],
        [ -7.3598,   4.7676,  20.5333,   7.3548],
        [ -8.5742,   3.8999,  17.1714,   7.2401],
        [ -6.6922,   6.1747,  24.2903,   8.8526],
        [ -8.4498,   3.7350,  17.1412,   7.1688],
        [ -8.4519,   3.7654,  17.1538,   7.1938],
        [ -8.6143,   3.9328,  17.1790,   7.2458],
        [ -8.5935,   3.9220,  17.1816,   7.2528],
        [-10.2283,   4.4862,  -6.7937,  11.2286],
        [-10.4728,   4.6147,  -6.6795,  11.4722],
        [-10.3264,   4.5699,  -6.7714,  11.3122],
        [-10.4160,   4.3761,  -6.6299,  11.6377],
        [-10.4019,   4.4845,  -6.6487,  11.4921],
        [-10.4002,   4.5534,  -6.6876,  11.4150],
        [-10.3793,   4.4079,  -6.6464,  11.5415],
        [-10.4043,   4.5192,  -6.6593,  11.4486]], grad_fn=<AddmmBackward>)
Out[10]: 
tensor([[-4.0926e+03, -4.0925e+03, -4.0925e+03, -4.0926e+03, -4.0925e+03,
         -4.0925e+03, -4.0925e+03, -4.0925e+03],
        [-4.0921e+03, -4.0920e+03, -4.0920e+03, -4.0921e+03, -4.0920e+03,
         -4.0920e+03, -4.0920e+03, -4.0920e+03],
        [-4.0921e+03, -4.0920e+03, -4.0920e+03, -4.0921e+03, -4.0920e+03,
         -4.0920e+03, -4.0920e+03, -4.0920e+03],
        [-4.0946e+03, -4.0945e+03, -4.0946e+03, -4.0947e+03, -4.0946e+03,
         -4.0945e+03, -4.0945e+03, -4.0945e+03],
        [-4.0926e+03, -4.0925e+03, -4.0925e+03, -4.0926e+03, -4.0925e+03,
         -4.0925e+03, -4.0925e+03, -4.0925e+03],
        [-4.0926e+03, -4.0925e+03, -4.0925e+03, -4.0926e+03, -4.0925e+03,
         -4.0925e+03, -4.0925e+03, -4.0925e+03],
        [-4.0926e+03, -4.0925e+03, -4.0925e+03, -4.0926e+03, -4.0925e+03,
         -4.0925e+03, -4.0925e+03, -4.0925e+03],
        [-4.0950e+03, -4.0949e+03, -4.0950e+03, -4.0950e+03, -4.0950e+03,
         -4.0949e+03, -4.0949e+03, -4.0949e+03],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10]], grad_fn=<IndexCopyBackward>)
Out[11]: 
tensor([ 64,  65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,
         78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,
         92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104, 105,
        106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
        120, 121, 122, 123, 124, 125, 126, 127])
Out[12]: 64
Out[13]: 
tensor([[-4.0926e+03, -4.0925e+03, -4.0925e+03, -4.0926e+03, -4.0925e+03,
         -4.0925e+03, -4.0925e+03, -4.0925e+03],
        [-4.0921e+03, -4.0920e+03, -4.0920e+03, -4.0921e+03, -4.0920e+03,
         -4.0920e+03, -4.0920e+03, -4.0920e+03],
        [-4.0921e+03, -4.0920e+03, -4.0920e+03, -4.0921e+03, -4.0920e+03,
         -4.0920e+03, -4.0920e+03, -4.0920e+03],
        [-4.0946e+03, -4.0945e+03, -4.0946e+03, -4.0947e+03, -4.0946e+03,
         -4.0945e+03, -4.0945e+03, -4.0945e+03],
        [-4.0926e+03, -4.0925e+03, -4.0925e+03, -4.0926e+03, -4.0925e+03,
         -4.0925e+03, -4.0925e+03, -4.0925e+03],
        [-4.0926e+03, -4.0925e+03, -4.0925e+03, -4.0926e+03, -4.0925e+03,
         -4.0925e+03, -4.0925e+03, -4.0925e+03],
        [-4.0926e+03, -4.0925e+03, -4.0925e+03, -4.0926e+03, -4.0925e+03,
         -4.0925e+03, -4.0925e+03, -4.0925e+03],
        [-4.0950e+03, -4.0949e+03, -4.0950e+03, -4.0950e+03, -4.0950e+03,
         -4.0949e+03, -4.0949e+03, -4.0949e+03],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10]], grad_fn=<IndexCopyBackward>)
Out[15]: 1
Out[16]: 
DGLGraph(num_nodes=16, num_edges=211,
         ndata_schemes={'node_type': Scheme(shape=(), dtype=torch.float32), 'tag': Scheme(shape=(), dtype=torch.int64), 'node_index': Scheme(shape=(), dtype=torch.int32), 'init_node_feature': Scheme(shape=(19,), dtype=torch.float32), 'node_feature': Scheme(shape=(96,), dtype=torch.float32), 'enemy_tag': Scheme(shape=(8,), dtype=torch.int64)}
         edata_schemes={'edge_type_one_hot': Scheme(shape=(4,), dtype=torch.float32), 'edge_type': Scheme(shape=(), dtype=torch.float32)})
Out[17]: 8
Out[18]: 
tensor([[-4093.5786],
        [-4093.9119],
        [-4093.5527],
        [-4095.6025],
        [-4093.2825],
        [-4093.2737],
        [-4093.5520],
        [-4093.4409],
        [-4093.7793],
        [-4093.4128],
        [-4095.5178],
        [-4093.1436],
        [-4093.1340],
        [-4093.4128],
        [-4093.4993],
        [-4093.8357],
        [-4093.4695],
        [-4095.5686],
        [-4093.2021],
        [-4093.1926],
        [-4093.4692],
        [-4093.5581],
        [-4093.8928],
        [-4093.5317],
        [-4095.5950],
        [-4093.2617],
        [-4093.2527],
        [-4093.5312],
        [-4093.4675],
        [-4093.8052],
        [-4093.4377],
        [-4095.5442],
        [-4093.1699],
        [-4093.1604],
        [-4093.4377],
        [-4093.5493],
        [-4093.8855],
        [-4093.5220],
        [-4095.5981],
        [-4093.2527],
        [-4093.2434],
        [-4093.5217],
        [-4093.5254],
        [-4093.8623],
        [-4093.4978],
        [-4095.5842],
        [-4093.2285],
        [-4093.2192],
        [-4093.4978],
        [-4093.5051],
        [-4093.8423],
        [-4093.4768],
        [-4095.5715],
        [-4093.2080],
        [-4093.1987],
        [-4093.4768]], grad_fn=<AddmmBackward>)
Out[19]: 
tensor([[ 3.5363e-01, -2.6650e-01, -5.5630e-04,  ..., -4.7725e+00,
          5.9042e-01,  6.7061e+00],
        [ 3.5363e-01, -2.6650e-01, -5.5630e-04,  ..., -4.7725e+00,
          5.9042e-01,  6.7061e+00],
        [ 3.5363e-01, -2.6650e-01, -5.5630e-04,  ..., -4.7725e+00,
          5.9042e-01,  6.7061e+00],
        ...,
        [ 3.5363e-01, -2.6650e-01, -5.5630e-04,  ..., -4.8045e+00,
          9.9539e-01,  6.3548e+00],
        [ 3.5363e-01, -2.6650e-01, -5.5630e-04,  ..., -4.8045e+00,
          9.9539e-01,  6.3548e+00],
        [ 3.5363e-01, -2.6650e-01, -5.5630e-04,  ..., -4.8045e+00,
          9.9539e-01,  6.3548e+00]], grad_fn=<CatBackward>)
Out[21]: 
tensor([[-4093.5786],
        [-4093.9119],
        [-4093.5527],
        [-4095.6025],
        [-4093.2825],
        [-4093.2737],
        [-4093.5520],
        [-4093.4409],
        [-4093.7793],
        [-4093.4128],
        [-4095.5178],
        [-4093.1436],
        [-4093.1340],
        [-4093.4128],
        [-4093.4993],
        [-4093.8357],
        [-4093.4695],
        [-4095.5686],
        [-4093.2021],
        [-4093.1926],
        [-4093.4692],
        [-4093.5581],
        [-4093.8928],
        [-4093.5317],
        [-4095.5950],
        [-4093.2617],
        [-4093.2527],
        [-4093.5312],
        [-4093.4675],
        [-4093.8052],
        [-4093.4377],
        [-4095.5442],
        [-4093.1699],
        [-4093.1604],
        [-4093.4377],
        [-4093.5493],
        [-4093.8855],
        [-4093.5220],
        [-4095.5981],
        [-4093.2527],
        [-4093.2434],
        [-4093.5217],
        [-4093.5254],
        [-4093.8623],
        [-4093.4978],
        [-4095.5842],
        [-4093.2285],
        [-4093.2192],
        [-4093.4978],
        [-4093.5051],
        [-4093.8423],
        [-4093.4768],
        [-4095.5715],
        [-4093.2080],
        [-4093.1987],
        [-4093.4768]], grad_fn=<AddmmBackward>)
Out[22]: 
MultiLayerPerceptron(
  (layers): ModuleList(
    (0): LinearModule(
      (linear_layer): NoisyLinear(in_features=192, out_features=64, bias=True)
      (dropout_layer): Dropout(p=0.0, inplace=False)
      (activation_layer): Mish()
      (norm_layer): Identity()
    )
    (1): LinearModule(
      (linear_layer): NoisyLinear(in_features=64, out_features=64, bias=True)
      (dropout_layer): Dropout(p=0.0, inplace=False)
      (activation_layer): Mish()
      (norm_layer): Identity()
    )
    (2): LinearModule(
      (linear_layer): NoisyLinear(in_features=64, out_features=1, bias=True)
      (dropout_layer): Dropout(p=0.0, inplace=False)
      (activation_layer): Identity()
      (norm_layer): Identity()
    )
  )
)
Out[23]: 
tensor([[-4.9527,  4.3381, 17.4955,  6.1486],
        [-4.6959,  4.7198, 18.7506,  6.5618],
        [-4.8779,  4.2675, 17.5191,  6.1135],
        [-4.6105,  6.3586, 23.3699,  9.1806],
        [-5.2783,  3.8518, 16.1871,  5.7858],
        [-5.2606,  3.8474, 16.1995,  5.7881],
        [-4.8823,  4.2418, 17.5161,  6.0892],
        [-8.4416,  3.3556, -6.4263,  9.7111],
        [-8.1761,  3.3499, -6.5826,  9.3543],
        [-8.3824,  3.4505, -6.4908,  9.4181],
        [-8.3958,  3.3593, -6.4187,  9.5952],
        [-8.2542,  3.4068, -6.5709,  9.3625],
        [-8.4023,  3.3951, -6.4015,  9.4927],
        [-8.3888,  3.4075, -6.4157,  9.4398],
        [-8.3647,  3.4197, -6.4586,  9.4092]], grad_fn=<AddmmBackward>)
Out[24]: 
tensor([[-4.0936e+03, -4.0934e+03, -4.0935e+03, -4.0936e+03, -4.0935e+03,
         -4.0935e+03, -4.0935e+03, -4.0935e+03],
        [-4.0939e+03, -4.0938e+03, -4.0938e+03, -4.0939e+03, -4.0938e+03,
         -4.0939e+03, -4.0939e+03, -4.0938e+03],
        [-4.0936e+03, -4.0934e+03, -4.0935e+03, -4.0935e+03, -4.0934e+03,
         -4.0935e+03, -4.0935e+03, -4.0935e+03],
        [-4.0956e+03, -4.0955e+03, -4.0956e+03, -4.0956e+03, -4.0955e+03,
         -4.0956e+03, -4.0956e+03, -4.0956e+03],
        [-4.0933e+03, -4.0931e+03, -4.0932e+03, -4.0933e+03, -4.0932e+03,
         -4.0933e+03, -4.0932e+03, -4.0932e+03],
        [-4.0933e+03, -4.0931e+03, -4.0932e+03, -4.0933e+03, -4.0932e+03,
         -4.0932e+03, -4.0932e+03, -4.0932e+03],
        [-4.0936e+03, -4.0934e+03, -4.0935e+03, -4.0935e+03, -4.0934e+03,
         -4.0935e+03, -4.0935e+03, -4.0935e+03],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10],
        [-1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10, -1.0000e+10,
         -1.0000e+10, -1.0000e+10, -1.0000e+10]], grad_fn=<IndexCopyBackward>)
Out[25]: 
tensor([[-4.9527,  4.3381, 17.4955,  6.1486],
        [-4.6959,  4.7198, 18.7506,  6.5618],
        [-4.8779,  4.2675, 17.5191,  6.1135],
        [-4.6105,  6.3586, 23.3699,  9.1806],
        [-5.2783,  3.8518, 16.1871,  5.7858],
        [-5.2606,  3.8474, 16.1995,  5.7881],
        [-4.8823,  4.2418, 17.5161,  6.0892],
        [-8.4416,  3.3556, -6.4263,  9.7111],
        [-8.1761,  3.3499, -6.5826,  9.3543],
        [-8.3824,  3.4505, -6.4908,  9.4181],
        [-8.3958,  3.3593, -6.4187,  9.5952],
        [-8.2542,  3.4068, -6.5709,  9.3625],
        [-8.4023,  3.3951, -6.4015,  9.4927],
        [-8.3888,  3.4075, -6.4157,  9.4398],
        [-8.3647,  3.4197, -6.4586,  9.4092]], grad_fn=<AddmmBackward>)
Out[27]: 
tensor([[-4.1866,  3.1226, 13.9024,  4.5051],
        [-3.4967,  5.0392, 18.9519,  6.9511],
        [-3.8195,  7.4364, 23.2739, 10.1524],
        [-3.6630,  4.1268, 16.5840,  5.5719],
        [-3.5850,  5.6098, 20.0906,  7.7244],
        [-3.8652,  3.6462, 15.2787,  4.9747],
        [-7.5844,  3.2009, -5.7059,  8.8435],
        [-7.6165,  3.1950, -5.6983,  8.8880],
        [-7.5427,  3.2026, -5.7414,  8.8249],
        [-7.4216,  3.1302, -5.8244,  8.7967],
        [-7.6904,  3.1818, -5.7061,  8.9794],
        [-7.7836,  3.1982, -5.7164,  9.0830],
        [-7.4270,  3.1490, -5.8068,  8.7826],
        [-7.5319,  3.2196, -5.7723,  8.8324]], grad_fn=<AddmmBackward>)
Out[28]: 